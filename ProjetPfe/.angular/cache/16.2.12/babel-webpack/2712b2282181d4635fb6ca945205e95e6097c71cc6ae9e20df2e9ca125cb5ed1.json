{"ast":null,"code":"\"use strict\";\n\n//import { Injectable } from '@angular/core';\n//import { ActivatedRouteSnapshot, CanActivate, Route, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n//import { Observable } from 'rxjs';\n//import { AuthentifcationService } from '../services/authentifcation.service';\n//@Injectable({\n//providedIn:'root'\n//})\n//export class AuthenticationGuard implements CanActivate{\n//constructor(private authService :AuthentifcationService,private router:Router){}\n//canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\n//let authenticated = this.authService.isAuthentifaction();\n//if(authenticated==false){\n//this.router.navigateByUrl(\"/login\");\n//return false;\n// }\n// else{\n// return true;\n//}\n//}\n//}","map":{"version":3,"names":[],"sources":["C:\\Users\\ASUS\\angularPfe\\ProjetPfe\\src\\app\\guards\\authentication.guard.ts"],"sourcesContent":["//import { Injectable } from '@angular/core';\n//import { ActivatedRouteSnapshot, CanActivate, Route, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\n//import { Observable } from 'rxjs';\n//import { AuthentifcationService } from '../services/authentifcation.service';\n//@Injectable({\n//providedIn:'root'\n//})\n//export class AuthenticationGuard implements CanActivate{\n  //constructor(private authService :AuthentifcationService,private router:Router){}\n  //canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\n //let authenticated = this.authService.isAuthentifaction();\n //if(authenticated==false){\n  //this.router.navigateByUrl(\"/login\");\n  //return false;\n// }\n// else{\n // return true;\n //}\n//}\n//}\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AACA;AACD;AACA;AACC;AACA;AACF;AACA;AACC;AACA;AACD;AACA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}