{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/authentifcation.service\";\nclass AppHttpInterceptor {\n  constructor(authService) {\n    this.authService = authService;\n  }\n  intercept(request, next) {\n    let newRequest = request.clone({\n      headers: request.headers.set('Authorization', 'Bearer' + this.authService.accessToken)\n    });\n    return next.handle(newRequest);\n  }\n  static #_ = this.ɵfac = function AppHttpInterceptor_Factory(t) {\n    return new (t || AppHttpInterceptor)(i0.ɵɵinject(i1.AuthentifcationService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AppHttpInterceptor,\n    factory: AppHttpInterceptor.ɵfac\n  });\n}\nexport { AppHttpInterceptor };","map":{"version":3,"names":["AppHttpInterceptor","constructor","authService","intercept","request","next","newRequest","clone","headers","set","accessToken","handle","_","i0","ɵɵinject","i1","AuthentifcationService","_2","factory","ɵfac"],"sources":["C:\\Users\\ASUS\\angularPfe\\ProjetPfe\\src\\app\\interceptors\\app-http.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthentifcationService } from '../services/authentifcation.service';\n\n@Injectable()\nexport class AppHttpInterceptor implements HttpInterceptor {\n\n  constructor(private authService : AuthentifcationService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    \n    let newRequest = request.clone({\n      headers : request.headers.set('Authorization','Bearer'+this.authService.accessToken)\n    });\n    return next.handle(newRequest);\n  }\n   \n}"],"mappings":";;AAUA,MACaA,kBAAkB;EAE7BC,YAAoBC,WAAoC;IAApC,KAAAA,WAAW,GAAXA,WAAW;EAA4B;EAE3DC,SAASA,CAACC,OAA6B,EAAEC,IAAiB;IAExD,IAAIC,UAAU,GAAGF,OAAO,CAACG,KAAK,CAAC;MAC7BC,OAAO,EAAGJ,OAAO,CAACI,OAAO,CAACC,GAAG,CAAC,eAAe,EAAC,QAAQ,GAAC,IAAI,CAACP,WAAW,CAACQ,WAAW;KACpF,CAAC;IACF,OAAOL,IAAI,CAACM,MAAM,CAACL,UAAU,CAAC;EAChC;EAAC,QAAAM,CAAA,G;qBAVUZ,kBAAkB,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,sBAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAlBjB,kBAAkB;IAAAkB,OAAA,EAAlBlB,kBAAkB,CAAAmB;EAAA;;SAAlBnB,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}