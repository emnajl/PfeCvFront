{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/authentifcation.service\";\nimport * as i3 from \"@angular/router\";\nclass LoginComponent {\n  constructor(fb, authService, router) {\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.userFormGroup = this.fb.group({\n      username: this.fb.control(\"\"),\n      password: this.fb.control(\"\")\n    });\n  }\n  handelelogin() {\n    let username = this.userFormGroup.value.username;\n    let pwd = this.userFormGroup.value.password;\n    this.authService.login(username, pwd).subscribe({\n      next: data => {\n        this.authService.loadProfile(data);\n        this.router.navigateByUrl(\"/admin\");\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthentifcationService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 20,\n    vars: 1,\n    consts: [[1, \"p-3\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"username\", 1, \"form-control\"], [\"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"], [\"routerLink\", \"/register\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵtext(3, \"Authentication\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.handelelogin();\n        });\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"label\", 6);\n        i0.ɵɵtext(8, \"UserName : \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 5)(11, \"label\", 6);\n        i0.ɵɵtext(12, \"Password : \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"button\", 9);\n        i0.ɵɵtext(15, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"span\");\n        i0.ɵɵtext(17, \" Not registered ? \");\n        i0.ɵɵelementStart(18, \"a\", 10);\n        i0.ɵɵtext(19, \"Register/Signup here\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.userFormGroup);\n      }\n    },\n    dependencies: [i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { LoginComponent };","map":{"version":3,"names":["LoginComponent","constructor","fb","authService","router","ngOnInit","userFormGroup","group","username","control","password","handelelogin","value","pwd","login","subscribe","next","data","loadProfile","navigateByUrl","error","err","console","log","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthentifcationService","i3","Router","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_ngSubmit_5_listener","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\ASUS\\angularPfe\\ProjetPfe\\src\\app\\login\\login.component.ts","C:\\Users\\ASUS\\angularPfe\\ProjetPfe\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { AuthentifcationService } from '../services/authentifcation.service';\n\nimport { AppComponent } from '../app.component';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit{\n  \n  userFormGroup!: FormGroup;\n  errorMessage : any;\n  \n  \n  \n  \n  constructor(private fb: FormBuilder ,private authService : AuthentifcationService,private router:Router ){}\n\n\n  ngOnInit(): void {\n    this.userFormGroup=this.fb.group({\n      username : this.fb.control(\"\"),\n      password : this.fb.control(\"\")\n    });\n  }\n\n  handelelogin(){\n    let username =this.userFormGroup.value.username;\n    let pwd =this.userFormGroup.value.password;\n    this.authService.login(username,pwd).subscribe({\n      next : data=>{\n        this.authService.loadProfile(data);\n        this.router.navigateByUrl(\"/admin\")\n      },\n      error:err=>{\n        console.log(err);\n      }\n    });\n  }\n}\n","<div class=\"p-3\">\n        <div class=\"card\">\n            <div class=\"card-header\">Authentication</div>\n            <div class=\"card-body\">\n                <form [formGroup]=\"userFormGroup\" (ngSubmit)=\"handelelogin()\">\n                    <div class=\"mb-3\">\n                        <label class=\"form-label\">UserName : </label>\n                        <input type=\"text\" formControlName=\"username\" class=\"form-control\">\n                    </div>\n                    <div class=\"mb-3\">\n                        <label class=\"form-label\">Password : </label>\n                        <input type=\"password\" formControlName=\"password\" class=\"form-control\">\n                    </div>\n                    <button class=\"btn btn-success\" type=\"submit\">Login</button>\n                    <span> Not registered ?\n                        <a routerLink=\"/register\">Register/Signup here</a>\n                    </span>\n                </form>\n            </div>\n        </div>\n   \n</div>"],"mappings":";;;;AAOA,MAKaA,cAAc;EAQzBC,YAAoBC,EAAe,EAAUC,WAAoC,EAASC,MAAa;IAAnF,KAAAF,EAAE,GAAFA,EAAE;IAAuB,KAAAC,WAAW,GAAXA,WAAW;IAAkC,KAAAC,MAAM,GAANA,MAAM;EAAU;EAG1GC,QAAQA,CAAA;IACN,IAAI,CAACC,aAAa,GAAC,IAAI,CAACJ,EAAE,CAACK,KAAK,CAAC;MAC/BC,QAAQ,EAAG,IAAI,CAACN,EAAE,CAACO,OAAO,CAAC,EAAE,CAAC;MAC9BC,QAAQ,EAAG,IAAI,CAACR,EAAE,CAACO,OAAO,CAAC,EAAE;KAC9B,CAAC;EACJ;EAEAE,YAAYA,CAAA;IACV,IAAIH,QAAQ,GAAE,IAAI,CAACF,aAAa,CAACM,KAAK,CAACJ,QAAQ;IAC/C,IAAIK,GAAG,GAAE,IAAI,CAACP,aAAa,CAACM,KAAK,CAACF,QAAQ;IAC1C,IAAI,CAACP,WAAW,CAACW,KAAK,CAACN,QAAQ,EAACK,GAAG,CAAC,CAACE,SAAS,CAAC;MAC7CC,IAAI,EAAGC,IAAI,IAAE;QACX,IAAI,CAACd,WAAW,CAACe,WAAW,CAACD,IAAI,CAAC;QAClC,IAAI,CAACb,MAAM,CAACe,aAAa,CAAC,QAAQ,CAAC;MACrC,CAAC;MACDC,KAAK,EAACC,GAAG,IAAE;QACTC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB;KACD,CAAC;EACJ;EAAC,QAAAG,CAAA,G;qBA9BUxB,cAAc,EAAAyB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,sBAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdjC,cAAc;IAAAkC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCZ3Bf,EAAA,CAAAiB,cAAA,aAAiB;QAEoBjB,EAAA,CAAAkB,MAAA,qBAAc;QAAAlB,EAAA,CAAAmB,YAAA,EAAM;QAC7CnB,EAAA,CAAAiB,cAAA,aAAuB;QACejB,EAAA,CAAAoB,UAAA,sBAAAC,iDAAA;UAAA,OAAYL,GAAA,CAAA9B,YAAA,EAAc;QAAA,EAAC;QACzDc,EAAA,CAAAiB,cAAA,aAAkB;QACYjB,EAAA,CAAAkB,MAAA,kBAAW;QAAAlB,EAAA,CAAAmB,YAAA,EAAQ;QAC7CnB,EAAA,CAAAsB,SAAA,eAAmE;QACvEtB,EAAA,CAAAmB,YAAA,EAAM;QACNnB,EAAA,CAAAiB,cAAA,cAAkB;QACYjB,EAAA,CAAAkB,MAAA,mBAAW;QAAAlB,EAAA,CAAAmB,YAAA,EAAQ;QAC7CnB,EAAA,CAAAsB,SAAA,gBAAuE;QAC3EtB,EAAA,CAAAmB,YAAA,EAAM;QACNnB,EAAA,CAAAiB,cAAA,iBAA8C;QAAAjB,EAAA,CAAAkB,MAAA,aAAK;QAAAlB,EAAA,CAAAmB,YAAA,EAAS;QAC5DnB,EAAA,CAAAiB,cAAA,YAAM;QAACjB,EAAA,CAAAkB,MAAA,0BACH;QAAAlB,EAAA,CAAAiB,cAAA,aAA0B;QAAAjB,EAAA,CAAAkB,MAAA,4BAAoB;QAAAlB,EAAA,CAAAmB,YAAA,EAAI;;;QAXpDnB,EAAA,CAAAuB,SAAA,GAA2B;QAA3BvB,EAAA,CAAAwB,UAAA,cAAAR,GAAA,CAAAnC,aAAA,CAA2B;;;;;;;SDQpCN,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}